<div class="jumbotron">
	  <h1 class="display-4 text-center">Reading List</h1>
	  <p class="lead text-center">Plan your reading here!</p>
	  <hr class="my-4 text-center">
	  <p>Use the functions below to create and update your own reading list.</p>
	</div>
	<div class="row">
		<div class="col">
			<div class="card">
			  <h5 class="card-header">Books to Read</h5>
			  <div class="card-body">
			    <table class="table">
				  <thead>
				    <tr>
				      <th scope="col">ID #</th>
				      <th scope="col">Title</th>
				      <th scope="col">Author</th>
				      <th scope="col">Reader</th>
				      <th scope="col">Mark as Read</th>
				      <th scope="col">Delete</th>
				    </tr>
				  </thead>
				  <tbody>
					{{#each book}}
						{{#unless finished}}
							{{> books/book-block finished=true}}
						{{/unless}}
					{{/each}}
				  </tbody>
				</table>
			  </div>
			</div>
		</div>
		<div class="col">
			<div class="card">
			  <h5 class="card-header">Books Finished</h5>
			  <div class="card-body">
			    <table class="table">
				  <thead>
				    <tr>
				      <th scope="col">ID #</th>
				      <th scope="col">Title</th>
				      <th scope="col">Author</th>
				      <th scope="col">Reader</th>
				      <th scope="col">Mark as unread</th>
				      <th scope="col">Delete</th>
				    </tr>
				  </thead>
				  <tbody>
				    {{#each book}}
				    	{{#if finished}}
							{{> books/book-block finished=false}}
				     	{{/if}}	
					{{/each}}
				  </tbody>
				</table>
			  </div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col">
			<div class="card">
				<h5 class="card-header">Add a book to your reading list</h5>
				<div class="card-body">
					<form id="new-book">
					  <div class="form-group">
					    <label>Book Title</label>
					    <input type="text" class="form-control" id="book-title" placeholder="title here">
					  </div>
					  <div class="form-group">
					    <label>Author</label>
					    <input type="text" class="form-control" id="author" placeholder="author here">
					  </div>
					  <button type="submit" class="btn btn-primary">Submit</button>
					</form>
				</div>
			</div>
		</div>
	</div>

	<script type="text/javascript">
		//displays an input box to add a reader when clicked
		$(".reader").on("click", function() {
			var currentReader = $(this).data("reader");
			$(this).children().hide();
			$(this).children("input.reader-edit").attr("placeholder", currentReader);
			$(this).children("input.reader-edit").show();
			$(this).children("input.reader-edit").focus();
		});

		//updates the new reader to the database when enter is hit in edit mode
		$(".reader").on("keyup", function() {
			var updatedBookId = $(this).data("bookid");

			if (event.which === 13) {
				var reader = $(this).children("input").val().trim();

				var newReader = {
					reader: reader
				};

				$.ajax("update-reader/" + updatedBookId, {
					type: "PUT",
					data: newReader
				}).then(function() {
					console.log("updated reader for id" + updatedBookId);
					location.reload();
				})
			}
		});

		//hides input box and shows reader span when input is out of focus
		$(document).on("blur", ".reader", function() {
			var currentReader = $(this).data("reader");
			$(this).children().hide();
			$(this).children("span").show();
		});

		//sets up post ajax request to add book to the database on submitting form
		$("#new-book").submit(function(event) {
			event.preventDefault();

			var title = $("#book-title").val().trim();
			var author = $("#author").val().trim();

			var newBook = {
				title: title,
				author: author
			}

			$.ajax("/add", {
				type: "POST",
				data: newBook
			}).then(
				function() {
					console.log("new book added");
					location.reload();
				}
			);
		})
		//sets up put ajax request to mark book as read/unread
		$(".update-status").on("click", function() {
			var id = $(this).data("bookid");
			var newStatus = $(this).data("newstatus");

			var newStatusState = {
				finished: newStatus
			};

			$.ajax("/update/" + id, {
				type: "PUT",
				data: newStatusState
			}).then(function() {
				console.log("updated id " + id);
				location.reload();
			})
		})
		//sets up delete ajax request to remove a book from the database
		$(".delete").on("click", function() {
			var id = $(this).data("bookid");

			$.ajax("/delete/" + id, {
				type: "DELETE"
			}).then(function() {
				console.log("deleted id " + id);
				location.reload();
			});
		});

	</script>